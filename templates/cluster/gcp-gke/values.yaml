# Cluster parameters
workersNumber: 3 # @schema description: The number of the worker nodes; type: number; minimum: 3; multipleOf: 3

clusterIdentity: # @schema description: The GCP Service Account credentials secret reference, auto-populated; type: object
  name: "" # @schema description: The GCP Service Account credentials secret name, auto-populated; type: string

clusterNetwork: # @schema description: The cluster network configuration; type: object
  pods: # @schema description: The network ranges from which Pod networks are allocated; type: object
    cidrBlocks: # @schema description: A list of CIDR blocks; type: array; item: string
      - "10.244.0.0/16"
  services: # @schema description: The network ranges from which service VIPs are allocated; type: object
    cidrBlocks: # @schema description: A list of CIDR blocks; type: array; item: string
      - "10.96.0.0/12"

clusterLabels: {} # @schema description: Labels to apply to the cluster; type: object; additionalProperties: true
clusterAnnotations: {} # @schema description: Annotations to apply to the cluster; type: object; additionalProperties: true

# GKE cluster parameters
gkeClusterName: "" # @schema description: The name of the GKE cluster. If you don't specify a gkeClusterName then a default name will be created based on the namespace and name of the managed control plane; type: string
project: "" # @schema description: The name of the project to deploy the cluster to; type: string; required: true
enableAutopilot: false # @schema description: Indicates whether to enable autopilot for this GKE cluster; type: boolean
releaseChannel: "regular" # @schema description: The release channel of the GKE cluster; enum: rapid,regular,stable; type: string
controlPlaneVersion: "" # @schema description: The control plane version of the GKE cluster. If not specified, the default version currently supported by GKE will be used; type: string
masterAuthorizedNetworksConfig: {} # @schema description: Represents configuration options for master authorized networks feature of the GKE cluster. This feature is disabled if this field is not specified; type: object
region: "" # @schema description: The GCP Region the cluster lives in; type: string; required: true
location: "" # @schema description: The location where the GKE cluster will be created. If unspecified, a region will be used, making the cluster regional. Otherwise, specifying a location will create a zonal cluster; type: string
network: # @schema description: The GCP network configuration; type: object
  name: "default" # @schema description: The GCP network name; type: string; required: true
  mtu: 1460 # @schema description: Maximum Transmission Unit in bytes; type: number; minimum: 1300; maximum: 8896
additionalLabels: {} # @schema description: Additional set of labels to add to all the GCP resources; type: object; additionalProperties: false; patternProperties: {"^[a-zA-Z0-9._-]+$": {"type": "string"}}

# GKE managed machines parameters
machines: # @schema description: Managed machines' parameters; type: object
  nodePoolName: "" # @schema description: The name of the GKE node pool corresponding to this MachinePool. If you don't specify a name then a default name will be created based on the namespace and name of the managed machine pool; type: string
  machineType: "" # @schema description: the name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types). If unspecified, the default machine type is `e2-medium`; type: string
  diskSizeGB: 100 # @schema description: The size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB; type: number; minimum: 10
  localSsdCount: # @schema description: LocalSsdCount is the number of local SSD disks to be attached to the node; type: number,null
  scaling: # @schema description: Scaling specifies scaling for the node pool; type: object
    enableAutoscaling: true # @schema description: Is autoscaling enabled for this node pool. If unspecified, the default value is true; type: boolean
    minCount: # @schema description: The minimum number of nodes in the node pool; type: number,null
    maxCount: # @schema description: The maximum number of nodes in the node pool; type: number,null
    locationPolicy: "balanced" # @schema description: Location policy used when scaling up a nodepool; type: string; enum: balanced,any
  nodeLocations: [] # @schema description: The list of zones in which the NodePool's nodes should be located; type: array; item: string
  imageType: "" # @schema description: The image type to use for this nodepool; type: string
  instanceType: "" # @schema description: The name of Compute Engine machine type; type: string
  diskType: "" # @schema description: The type of the disk attached to each node; type: string
  maxPodsPerNode: # @schema description: The constraint enforced on the max num of pods per node; type: number,null; minimum: 8; maximum: 256
  kubernetesLabels: {} # @schema description: The labels to apply to the nodes of the node pool; type: object; additionalProperties: true
  kubernetesTaints: [] # @schema description: The taints to apply to the nodes of the node pool; type: array; additionalProperties: false
  additionalLabels: {} # @schema description: AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider, in addition to the ones added by default; type: object; additionalProperties: false; patternProperties: {"^[a-zA-Z0-9._-]+$": {"type": "string"}}
  management: # @schema description: The node pool management options; type: object
    autoUpgrade: true # @schema description: AutoUpgrade specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes; type: boolean
    autoRepair: false # @schema description: AutoRepair specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered; type: boolean
