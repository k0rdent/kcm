{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "A KCM cluster docker-hosted-cp template",
  "type": "object",
  "properties": {
    "clusterAnnotations": {
      "type": "object"
    },
    "clusterLabels": {
      "type": "object"
    },
    "clusterNetwork": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "object",
          "properties": {
            "cidrBlocks": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "serviceDomain": {
          "type": "string"
        },
        "services": {
          "type": "object",
          "properties": {
            "cidrBlocks": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "k0s": {
      "description": "K0s parameters",
      "type": "object",
      "properties": {
        "version": {
          "description": "K0s version",
          "type": "string"
        },
        "workerArgs": {
          "description": "Args specifies extra arguments to be passed to k0s worker. See: https://docs.k0sproject.io/stable/worker-node-config/ See: https://docs.k0sproject.io/stable/cli/k0s_worker/",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "k0smotron": {
      "description": "K0smotron parameters",
      "type": "object",
      "properties": {
        "controllerPlaneFlags": {
          "description": "ControlPlaneFlags allows to configure additional flags for k0s control plane and to override existing ones. The default flags are kept unless they are overriden explicitly. Flags with arguments must be specified as a single string, e.g. --some-flag=argument",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "service": {
          "description": "The API service configuration",
          "type": "object",
          "properties": {
            "type": {
              "description": "An ingress methods for a service",
              "default": "NodePort",
              "type": "string",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ]
            }
          }
        }
      }
    },
    "workersNumber": {
      "type": "integer"
    }
  }
}
