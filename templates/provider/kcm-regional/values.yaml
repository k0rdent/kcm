nameOverride: ""
fullnameOverride: ""

telemetry: # @schema type: object; description: Telemetry collection configuration; additionalProperties: false
  controller: # @schema type: object; description: Telemetry runner configuration; additionalProperties: false
    replicas: 1
    image:
      repository: ghcr.io/k0rdent/kcm/telemetry
      tag: latest
      pullPolicy: IfNotPresent # @schema type: string; enum: [IfNotPresent, Always, Never]; description: Image pull policy
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 64Mi
    nodeSelector: {} # @schema type: object; description: Node selector to constrain the pod to run on specific nodes
    affinity: {} # @schema type: object; description: Affinity rules for pod scheduling
    tolerations: [] # @schema type: array; description: Tolerations to allow the pod to schedule on tainted nodes
    logger: # @schema title: Logger Settings; description: Global controllers logger settings; type: object
      devel: false # @schema type: boolean; description: Development defaults(encoder=console,logLevel=debug,stackTraceLevel=warn) Production defaults(encoder=json,logLevel=info,stackTraceLevel=error)
      encoder: "" # @schema enum:[json, console, ""] ; type: string
      log-level: "" # @schema enum:[info, debug, error, ""] ; type: string
      stacktrace-level: "" # @schema enum:[info, error, panic, ""] ; type: string
      time-encoding: rfc3339 # @schema enum:[epoch, millis, nano, iso8601, rfc3339, rfc3339nano, ""] ; type: string
    debug:
      pprofBindAddress: "" # @schema type: string; title: Set pprof binding address; description: The TCP address that the controller should bind to for serving pprof, '0' or empty value disables pprof; pattern: (?:^0?$)|(?:^(?:[\w.-]+(?:\.?[\w\.-]+)+)?:(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$)

  mode: online # @schema type: string; enum: [disabled, local, online]; description: Defines the way telemetry is collected and stored
  concurrency: 5 # @schema type: integer; description: Number of clusters for which data is collected concurrently; minimum: 1; maximum: 100
  interval: 1h # @schema type: string; description: Defines how frequently the data should be collected
  jitter: 10 # @schema type: integer; description: Jitter in percentage [1, 100); minimum: 1; maximum: 99

  local: # @schema type: object; description: Local telemetry collection settings, applicable only if .telemetry.mode is set to local; additionalProperties: false
    baseDir: "/var/lib/telemetry" # @schema type: string; title: Base directory where to put local telemetry data; description: Base dir for the local telemetry data, taken into account only if telemetry.mode is set to 'local'; required: true

    volume: # @schema type: object; description: Volumes and claims configuration depending on the source of the storage; additionalProperties: false
      source: hostPath # @schema type: string; enum: [pvc, existing, hostPath]; description: Defines the source of the storage. [pvc] - chart creates a PVC only (dynamic provisioning via StorageClass). [existing] - chart uses an existing PVC. [hostPath] - chart creates a hostPath source typed PV and matching PVC (default)

      pvc: # @schema type: object; description: PVC settings if source of the storage is set to pvc (dynamic provisioning); additionalProperties: false
        storageClassName: "" # @schema type: string; description: Name of the StorageClass, empty defines to use default StorageClass
        accessModes: ["ReadWriteOnce"] # @schema item: string; itemEnum: [ReadWriteOnce, ReadWriteOncePod, ReadOnlyMany, ReadWriteMany]; description: Types of access modes required, RWOP is not supported with the default Deployment settings
        volumeMode: Filesystem # @schema type: string; enum: [Filesystem, Block]; description: Defines what type of volume is required by the claim
        size: 200Mi # @schema type: string; description: Defines the requested size required by the claim
        annotations: {} # @schema description: Annotations (map) to be set; type: object; additionalProperties: true

      existingClaim: "" # @schema description: Name of the claim to be used, valid if source of the storage is to existing; type: string

      hostPath: # @schema type: object; description: Settings of the hostPath PV and PVC source if source of the storage is set to hostPath; additionalProperties: false
        name: "" # @schema type: string; description: Name of the PV to be created, defaults to <fullname>-telemetry-data
        reclaimPolicy: Retain # @schema type: string; enum: [Retain, Delete]; description: Policy for end-of-life maintenance of the volume
        storageClassName: "manual" # @schema type: string; description: Name of the StorageClass to match PV and PVC
        accessModes: ["ReadWriteOnce"] # @schema item: string; itemEnum: [ReadWriteOnce, ReadWriteOncePod, ReadOnlyMany, ReadWriteMany]; description: Ways the volume can be mounted, RWOP is not supported with the default Deployment settings
        volumeMode: Filesystem # @schema type: string; enum: [Filesystem, Block]; description: Defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state
        size: 200Mi # @schema type: string; description: Defines the actual resources of the volume
        annotations: {} # @schema description: Annotations (map) to be set; type: object; additionalProperties: true
        labels: {} # @schema description: Labels (map) to be set; type: object; additionalProperties: true
        nodeAffinity: {} # @schema type: object; additionalProperties: true; description: Node affinity settings if in multi-node environment

cert-manager:
  enabled: true
  crds:
    enabled: true
    keep: false

cluster-api-operator:
  enabled: false
  resources:
    manager:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 200m
        memory: 150Mi

velero:
  enabled: true
  fullnameOverride: velero # vmware-tanzu/velero#9023
  # example of enabling a plugin
  # initContainers:
  # - name: velero-plugin-for-aws
  #   image: velero/velero-plugin-for-aws:v1.13.0
  #   imagePullPolicy: IfNotPresent
  #   volumeMounts:
  #     - mountPath: /target
  #       name: plugins
  metrics:
    enabled: false
  upgradeCRDs: false
  cleanUpCRDs: false
  credentials:
    useSecret: false
  snapshotsEnabled: false
  backupsEnabled: false
  deployNodeAgent: false
