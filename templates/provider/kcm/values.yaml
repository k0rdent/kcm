nameOverride: ""
fullnameOverride: ""

admissionWebhook:
  # enabled: false # WARN: setting the default value to false actually disables the WH; setting to true does not allow to install the KCM chart due to missing cert-manager CRDs
  port: 9443
  certDir: "/tmp/k8s-webhook-server/serving-certs/"

controller:
  templatesRepoURL: "oci://ghcr.io/k0rdent/kcm/charts"
  globalRegistry: ""
  globalK0sURL: ""
  k0sURLCertSecret: "" # @schema type: string; description: Name of a Secret containing K0s Download URL Root CA with ca.crt key
  registryCredsSecret: "" # @schema type: string; description: Name of a Secret containing Registry Credentials (Auth) Data
  registryCertSecret: "" # @schema type: string; description: Name of a Secret containing Registry Root CA with ca.crt key
  insecureRegistry: false
  createManagement: true
  createAccessManagement: true
  createRelease: true
  createTemplates: true
  enableTelemetry: true # @schema type: boolean; description: DEPRECATED in favor of the telemetry block. Enables or disables telemetry collection.
  nodeSelector: {} # @schema type: object; description: Node selector to constrain the pod to run on specific nodes
  affinity: {} # @schema type: object; description: Affinity rules for pod scheduling
  tolerations: [] # @schema type: array; description: Tolerations to allow the pod to schedule on tainted nodes
  validateClusterUpgradePath: true # @schema type: boolean; description: Specifies whether the ClusterDeployment upgrade path should be validated
  enableSveltosCtrl: true # @schema type: boolean; description: Enables built-in ServiceSet controller to reconcile ProjectSveltos objects
  enableSveltosExpiredCtrl: false # @schema type: boolean; description: Enables SveltosCluster controller, updating stuck (expired) sveltos management cluster kubeconfig tokens
  defaultHelmTimeout: "" # @schema type: string; description: Specifies the timeout duration for Helm install or upgrade operations. If unset, Fluxâ€™s default value will be used
  logger: # @schema title: Logger Settings; description: Global controllers logger settings; type: object
    devel: false # @schema type: boolean; description: Development defaults(encoder=console,logLevel=debug,stackTraceLevel=warn) Production defaults(encoder=json,logLevel=info,stackTraceLevel=error)
    encoder: "" # @schema enum:[json, console, ""] ; type: string
    log-level: "" # @schema enum:[info, debug, error, ""] ; type: string
    stacktrace-level: "" # @schema enum:[info, error, panic, ""] ; type: string
    time-encoding: rfc3339 # @schema enum:[epoch, millis, nano, iso8601, rfc3339, rfc3339nano, ""] ; type: string
  debug:
    pprofBindAddress: "" # @schema type: string; title: Set pprof binding address; description: The TCP address that the controller should bind to for serving pprof, '0' or empty value disables pprof; pattern: (?:^0?$)|(?:^(?:[\w.-]+(?:\.?[\w\.-]+)+)?:(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$)

telemetry: # @schema type: object; description: Telemetry collection configuration; additionalProperties: false
  mode: online # @schema type: string; enum: [disabled, local, online]; description: Defines the way telemetry is collected and stored
  concurrency: 5 # @schema type: integer; description: Number of clusters for which data is collected concurrently; minimum: 1; maximum: 100
  interval: 1h # @schema type: string; description: Defines how frequently the data should be collected
  jitter: 10 # @schema type: integer; description: Jitter in percentage [1, 100); minimum: 1; maximum: 99

  local: # @schema type: object; description: Local telemetry collection settings, applicable only if .telemetry.mode is set to local; additionalProperties: false
    baseDir: "/var/lib/telemetry" # @schema type: string; title: Base directory where to put local telemetry data; description: Base dir for the local telemetry data, taken into account only if telemetry.mode is set to 'local'; required: true

    volume: # @schema type: object; description: Volumes and claims configuration depending on the source of the storage; additionalProperties: false
      source: hostPath # @schema type: string; enum: [pvc, existing, hostPath]; description: Defines the source of the storage. [pvc] - chart creates a PVC only (dynamic provisioning via StorageClass). [existing] - chart uses an existing PVC. [hostPath] - chart creates a hostPath source typed PV and matching PVC (default)

      pvc: # @schema type: object; description: PVC settings if source of the storage is set to pvc (dynamic provisioning); additionalProperties: false
        storageClassName: "" # @schema type: string; description: Name of the StorageClass, empty defines to use default StorageClass
        accessModes: ["ReadWriteOnce"] # @schema item: string; itemEnum: [ReadWriteOnce, ReadWriteOncePod, ReadOnlyMany, ReadWriteMany]; description: Types of access modes required, RWOP is not supported with the default Deployment settings
        volumeMode: Filesystem # @schema type: string; enum: [Filesystem, Block]; description: Defines what type of volume is required by the claim
        size: 200Mi # @schema type: string; description: Defines the requested size required by the claim
        annotations: {} # @schema description: Annotations (map) to be set; type: object; additionalProperties: true

      existingClaim: "" # @schema description: Name of the claim to be used, valid if source of the storage is to existing; type: string

      hostPath: # @schema type: object; description: Settings of the hostPath PV and PVC source if source of the storage is set to hostPath; additionalProperties: false
        name: "" # @schema type: string; description: Name of the PV to be created, defaults to <fullname>-telemetry-data
        reclaimPolicy: Retain # @schema type: string; enum: [Retain, Delete]; description: Policy for end-of-life maintenance of the volume
        storageClassName: "manual" # @schema type: string; description: Name of the StorageClass to match PV and PVC
        accessModes: ["ReadWriteOnce"] # @schema item: string; itemEnum: [ReadWriteOnce, ReadWriteOncePod, ReadOnlyMany, ReadWriteMany]; description: Ways the volume can be mounted, RWOP is not supported with the default Deployment settings
        volumeMode: Filesystem # @schema type: string; enum: [Filesystem, Block]; description: Defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state
        size: 200Mi # @schema type: string; description: Defines the actual resources of the volume
        annotations: {} # @schema description: Annotations (map) to be set; type: object; additionalProperties: true
        labels: {} # @schema description: Labels (map) to be set; type: object; additionalProperties: true
        nodeAffinity: {} # @schema type: object; additionalProperties: true; description: Node affinity settings if in multi-node environment

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

image:
  repository: ghcr.io/k0rdent/kcm/controller
  tag: latest
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

replicas: 1

serviceAccount:
  annotations: {}

kubernetesClusterDomain: cluster.local
metricsService:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  type: ClusterIP

# Subcharts
flux2:
  enabled: true
  policies:
    create: false
  imageAutomationController:
    create: false
  imageReflectionController:
    create: false
  kustomizeController:
    create: false
  notificationController:
    create: false
  helmController:
    container:
      additionalArgs:
        - --watch-label-selector=k0rdent.mirantis.com/managed=true
  sourceController:
    container:
      additionalArgs:
        - --watch-label-selector=k0rdent.mirantis.com/managed=true

rbac-manager:
  enabled: true
