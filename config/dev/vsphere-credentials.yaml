---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereClusterIdentity
metadata:
  name: vsphere-cluster-identity
  namespace: ${NAMESPACE}
  labels:
    k0rdent.mirantis.com/component: "kcm"
spec:
  secretName: vsphere-cluster-identity-secret
  allowedNamespaces:
    selector:
      matchLabels: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: vsphere-cluster-identity-secret
  namespace: ${NAMESPACE}
  labels:
    k0rdent.mirantis.com/component: "kcm"
stringData:
  username: ${VSPHERE_USER}
  password: ${VSPHERE_PASSWORD}
---
apiVersion: k0rdent.mirantis.com/v1alpha1
kind: Credential
metadata:
  name: vsphere-cluster-identity-cred
  namespace: ${NAMESPACE}
spec:
  description: vSphere credentials
  identityRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: VSphereClusterIdentity
    name: vsphere-cluster-identity
    namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vsphere-cluster-identity-resource-template
  namespace: ${NAMESPACE}
  labels:
    k0rdent.mirantis.com/component: "kcm"
  annotations:
    projectsveltos.io/template: "true"
data:
  configmap.yaml: |
    {{- $$cluster := .InfrastructureProvider -}}
    {{- $$identity := (getResource "InfrastructureProviderIdentity") -}}
    {{- $$secret := (getResource "InfrastructureProviderIdentitySecret") -}}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: vsphere-cloud-secret
      namespace: kube-system
    type: Opaque
    data:
      {{ printf "%s.username" $$cluster.spec.server }}: {{ index $$secret.data "username" }}
      {{ printf "%s.password" $$cluster.spec.server }}: {{ index $$secret.data "password" }}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: vcenter-config-secret
      namespace: kube-system
    type: Opaque
    stringData:
      csi-vsphere.conf: |
        [Global]
        cluster-id = "{{ $$cluster.metadata.name }}"

        [VirtualCenter "{{ $$cluster.spec.server }}"]
        insecure-flag = "true"
        user = "{{ index $$secret.data "username" | b64dec }}"
        password = "{{ index $$secret.data "password" | b64dec }}"
        port = "443"
        datacenters = ${VSPHERE_DATACENTER}
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cloud-config
      namespace: kube-system
    data:
      vsphere.conf: |
        global:
          insecureFlag: true
          port: 443
          secretName: vsphere-cloud-secret
          secretNamespace: kube-system
        labels:
          region: k8s-region
          zone: k8s-zone
        vcenter:
          {{ $$cluster.spec.server }}:
            datacenters:
              - ${VSPHERE_DATACENTER}
            server: {{ $$cluster.spec.server }}
